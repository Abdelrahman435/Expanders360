# version: '3.8'

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#       target: production
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=production
#       - MYSQL_HOST=${MYSQL_HOST}
#       - MYSQL_PORT=${MYSQL_PORT}
#       - MYSQL_USERNAME=${MYSQL_USERNAME}
#       - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#       - MYSQL_DATABASE=${MYSQL_DATABASE}
#       - MONGODB_URI=${MONGODB_URI}
#       - JWT_SECRET=${JWT_SECRET}
#       - ADMIN_EMAIL=${ADMIN_EMAIL}
#     restart: unless-stopped
#     depends_on:
#       - mysql
#       - mongodb
#       - redis

#   mysql:
#     image: mysql:8.0
#     environment:
#       - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#       - MYSQL_DATABASE=${MYSQL_DATABASE}
#     volumes:
#       - mysql_prod_data:/var/lib/mysql
#     restart: unless-stopped

#   mongodb:
#     image: mongo:6.0
#     volumes:
#       - mongodb_prod_data:/data/db
#     restart: unless-stopped

#   redis:
#     image: redis:7-alpine
#     volumes:
#       - redis_prod_data:/data
#     restart: unless-stopped

#   nginx:
#     image: nginx:alpine
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf
#       - ./ssl:/etc/nginx/ssl
#     depends_on:
#       - app
#     restart: unless-stopped

# volumes:
#   mysql_prod_data:
#   mongodb_prod_data:
#   redis_prod_data:

version: "3.8"

services:
  app:
    build: .
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    depends_on:
      - mysql
    command: npm run start:prod

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql

volumes:
  mysql-data:
